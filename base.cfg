[buildout]
show-picked-versions = true
extensions =
    mr.developer
    
index = https://pypi.python.org/simple/

parts =
    instance
    test
    coverage
    test-coverage
    createcoverage
    code-analysis
    releaser
    i18ndude
    omelette
    plone-helper-scripts
    zpretty
    zpretty-run
    createcoverage
    coverage
    test-coverage

develop = .

sources-dir = extra
auto-checkout = *

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
environment-vars =
    zope_i18n_compile_mo_files true

zope-conf-additional +=
  <product-config redturtle.prenotazioni>
      logfile ${buildout:directory}/var/log/prenotazioni.log
  </product-config>

eggs =
    Plone
    Pillow
    redturtle.prenotazioni [test, app_io]


[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src
flake8-exclude=bootstrap.py,bootstrap-buildout.py,docs,bin,*.egg,setup.py,overrides,omelette
flake8-max-complexity = 25
flake8-ignore = E203, E266, E501, W503, E231
flake8-max-line-length = 200
# flake8-select = B,C,E,F,W,T4,B9
flake8-extensions =
    flake8-coding
    flake8-debugger
    flake8-print
#    flake8-isort
# additional pep8/flake8 rules, see docs for details
# https://pep8.readthedocs.io/en/1.4.6/intro.html#error-codes
# - E123: closing bracket does not match indentation of opening bracketâ€™s line
# flake8-select = E123

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[test]
recipe = zc.recipe.testrunner
eggs = ${instance:eggs}
initialization =
    os.environ['TZ'] = 'UTC'
defaults = ['-s', 'redturtle.prenotazioni', '--auto-color', '--auto-progress']


[coverage]
recipe = zc.recipe.egg
eggs = coverage


[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755


[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage

[zpretty]
recipe = zc.recipe.egg
eggs =
   zpretty

[zpretty-run]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    find src -name '*.zcml' | xargs bin/zpretty -i
output = ${buildout:directory}/bin/zpretty-run
mode = 755

[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser

[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=75
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
    ${buildout:directory}/bin/coverage json -i
output = ${buildout:directory}/bin/test-coverage
mode = 755

[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage

[coverage]
recipe = zc.recipe.egg
eggs = coverage

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[plone-helper-scripts]
recipe = zc.recipe.egg
eggs =
   Products.CMFPlone
   ${instance:eggs}
interpreter = zopepy
scripts =
   zopepy
   plone-compile-resources

[versions]
# redturtle.prenotazioni =

[sources]
collective.z3cform.datagridfield = git git@github.com:collective/collective.z3cform.datagridfield.git
